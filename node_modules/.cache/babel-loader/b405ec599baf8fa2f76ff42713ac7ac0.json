{"ast":null,"code":"var _jsxFileName = \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/BasePage.js\";\n// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\nimport { AVAILABLE_COLORS, AVAILABLE_MANUFACTURES, ProductStatusTitles, ProductConditionTitles } from \"../ProductsUIHelpers\"; // Validation schema\n\nvar ProductEditSchema = Yup.object().shape({\n  model: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Model is required\"),\n  manufacture: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Manufacture is required\"),\n  modelYear: Yup.number().min(1950, \"1950 is minimum\").max(2020, \"2020 is maximum\").required(\"Model year is required\"),\n  mileage: Yup.number().min(0, \"0 is minimum\").max(1000000, \"1000000 is maximum\").required(\"Mileage is required\"),\n  color: Yup.string().required(\"Color is required\"),\n  price: Yup.number().min(1, \"$1 is minimum\").max(1000000, \"$1000000 is maximum\").required(\"Price is required\"),\n  VINCode: Yup.string().required(\"VINCode is required\")\n});\nexport function MyPage(_ref) {\n  var _this = this;\n\n  var product = _ref.product,\n      btnRef = _ref.btnRef,\n      saveProduct = _ref.saveProduct;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: product,\n    validationSchema: ProductEditSchema,\n    onSubmit: function onSubmit(values) {\n      saveProduct(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"model\",\n      component: Input,\n      placeholder: \"Model\",\n      label: \"Model\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"manufacture\",\n      label: \"Manufacture\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, AVAILABLE_MANUFACTURES.map(function (manufacture) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: manufacture,\n        value: manufacture,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, manufacture);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"modelYear\",\n      component: Input,\n      placeholder: \"Model year\",\n      label: \"Model year\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"mileage\",\n      component: Input,\n      placeholder: \"Mileage\",\n      label: \"Mileage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"color\",\n      label: \"Color\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, AVAILABLE_COLORS.map(function (color) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: color,\n        value: color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, color);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"price\",\n      component: Input,\n      placeholder: \"Price\",\n      label: \"Price ($)\",\n      customFeedbackLabel: \"Please enter Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"VINCode\",\n      component: Input,\n      placeholder: \"VIN code\",\n      label: \"VIN code\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"status\",\n      label: \"Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, ProductStatusTitles.map(function (status, index) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: status,\n        value: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, status);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"condition\",\n      label: \"Condition\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, ProductConditionTitles.map(function (condition, index) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: condition,\n        value: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, condition);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      as: \"textarea\",\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        display: \"none\"\n      },\n      ref: btnRef,\n      onSubmit: function onSubmit() {\n        return handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/BasePage.js"],"names":["React","Formik","Form","Field","Yup","Input","Select","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductStatusTitles","ProductConditionTitles","ProductEditSchema","object","shape","model","string","min","max","required","manufacture","modelYear","number","mileage","color","price","VINCode","MyPage","product","btnRef","saveProduct","values","handleSubmit","map","status","index","condition","display"],"mappings":"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","sourcesContent":["// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n      .min(2, \"Minimum 2 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n      .min(2, \"Minimum 2 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n      .min(1950, \"1950 is minimum\")\r\n      .max(2020, \"2020 is maximum\")\r\n      .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n      .min(0, \"0 is minimum\")\r\n      .max(1000000, \"1000000 is maximum\")\r\n      .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n      .min(1, \"$1 is minimum\")\r\n      .max(1000000, \"$1000000 is maximum\")\r\n      .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function MyPage({\r\n                                  product,\r\n                                  btnRef,\r\n                                  saveProduct,\r\n                                }) {\r\n  return (\r\n      <>\r\n        <Formik\r\n            enableReinitialize={true}\r\n            initialValues={product}\r\n            validationSchema={ProductEditSchema}\r\n            onSubmit={(values) => {\r\n              saveProduct(values);\r\n            }}\r\n        >\r\n          {({ handleSubmit }) => (\r\n              <>\r\n                <Form className=\"form form-label-right\">\r\n                  <div className=\"form-group row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                          name=\"model\"\r\n                          component={Input}\r\n                          placeholder=\"Model\"\r\n                          label=\"Model\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Select name=\"manufacture\" label=\"Manufacture\">\r\n                        {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                            <option key={manufacture} value={manufacture}>\r\n                              {manufacture}\r\n                            </option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                          type=\"number\"\r\n                          name=\"modelYear\"\r\n                          component={Input}\r\n                          placeholder=\"Model year\"\r\n                          label=\"Model year\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                          type=\"number\"\r\n                          name=\"mileage\"\r\n                          component={Input}\r\n                          placeholder=\"Mileage\"\r\n                          label=\"Mileage\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Select name=\"color\" label=\"Color\">\r\n                        {AVAILABLE_COLORS.map((color) => (\r\n                            <option key={color} value={color}>\r\n                              {color}\r\n                            </option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          component={Input}\r\n                          placeholder=\"Price\"\r\n                          label=\"Price ($)\"\r\n                          customFeedbackLabel=\"Please enter Price\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                          name=\"VINCode\"\r\n                          component={Input}\r\n                          placeholder=\"VIN code\"\r\n                          label=\"VIN code\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Select name=\"status\" label=\"Status\">\r\n                        {ProductStatusTitles.map((status, index) => (\r\n                            <option key={status} value={index}>\r\n                              {status}\r\n                            </option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                      <Select name=\"condition\" label=\"Condition\">\r\n                        {ProductConditionTitles.map((condition, index) => (\r\n                            <option key={condition} value={index}>\r\n                              {condition}\r\n                            </option>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <Field\r\n                        name=\"description\"\r\n                        as=\"textarea\"\r\n                        className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <button\r\n                      type=\"submit\"\r\n                      style={{ display: \"none\" }}\r\n                      ref={btnRef}\r\n                      onSubmit={() => handleSubmit()}\r\n                  ></button>\r\n                </Form>\r\n              </>\r\n          )}\r\n        </Formik>\r\n      </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}