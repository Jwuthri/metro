{"ast":null,"code":"import _slicedToArray from \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/pages/MyPage.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent'; // import Button from '@material-ui/core/Button';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from \"react-bootstrap\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2)\n    },\n    resetContainer: {\n      padding: theme.spacing(3)\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return \"For each ad campaign that you create, you can control how much\\n              you're willing to spend on clicks and conversions, which networks\\n              and geographical locations you want your ads to show on, and more.\";\n\n    case 1:\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\n\n    case 2:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport function MyPage() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var steps = getSteps();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  }\n\n  function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Init task\"), /*#__PURE__*/React.createElement(StepContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n  // color=\"primary\"\n  , {\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Next\"))))), steps.map(function (label, index) {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, label), /*#__PURE__*/React.createElement(StepContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, getStepContent(index)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actionsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n    // color=\"primary\"\n    , {\n      onClick: handleNext,\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, activeStep === steps.length ? 'Finish' : 'Next'), /*#__PURE__*/React.createElement(Button, {\n      \"aria-label\": \"Add\",\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }))))));\n  })), activeStep === steps.length + 1 && /*#__PURE__*/React.createElement(Paper, {\n    square: true,\n    elevation: 0,\n    className: classes.resetContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 28\n      }\n    }, \"Note archived\"),\n    action: [/*#__PURE__*/React.createElement(Button, {\n      key: \"undo\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  })));\n} //\n//\n//\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import IconButton from '@material-ui/core/IconButton';\n// import CloseIcon from '@material-ui/icons/Close';\n//\n// const useStyles = makeStyles(theme => ({\n//   close: {\n//     padding: theme.spacing(0.5),\n//   },\n// }));\n//\n// export default function SimpleSnackbar() {\n//   const classes = useStyles();\n//   const [open, setOpen] = React.useState(false);\n//\n//   function handleClick() {\n//     setOpen(true);\n//   }\n//\n//   function handleClose(event, reason) {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//\n//     setOpen(false);\n//   }\n//\n//   return (\n//       <div>\n//         <Button onClick={handleClick}>Open simple snackbar</Button>\n//         <Snackbar\n//             anchorOrigin={{\n//               vertical: 'bottom',\n//               horizontal: 'left',\n//             }}\n//             open={open}\n//             autoHideDuration={6000}\n//             onClose={handleClose}\n//             ContentProps={{\n//               'aria-describedby': 'message-id',\n//             }}\n//             message={<span id=\"message-id\">Note archived</span>}\n//             action={[\n//               <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n//                 UNDO\n//               </Button>,\n//               <IconButton\n//                   key=\"close\"\n//                   aria-label=\"Close\"\n//                   color=\"inherit\"\n//                   className={classes.close}\n//                   onClick={handleClose}\n//               >\n//                 <CloseIcon />\n//               </IconButton>,\n//             ]}\n//         />\n//       </div>\n//   );\n// }","map":{"version":3,"sources":["/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/pages/MyPage.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Paper","Typography","Button","Fab","AddIcon","Snackbar","IconButton","CloseIcon","useStyles","theme","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","success","backgroundColor","green","error","palette","dark","info","primary","main","warning","amber","icon","fontSize","iconVariant","opacity","message","display","alignItems","getSteps","getStepContent","step","MyPage","classes","useState","activeStep","setActiveStep","steps","open","setOpen","handleClick","handleClose","event","reason","handleNext","prevActiveStep","handleBack","handleReset","root","map","label","index","length","vertical","horizontal","close"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\n// import Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport function MyPage() {\r\n  const classes = useStyles();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          <Step key={0}>\r\n            <StepLabel>Init task</StepLabel>\r\n            <StepContent>\r\n              <Typography>\r\n\r\n              </Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                      // variant=\"contained\"\r\n                      // color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n\r\n          {steps.map((label, index) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n                <StepContent>\r\n                  <Typography>{getStepContent(index)}</Typography>\r\n                  <div className={classes.actionsContainer}>\r\n                    <div>\r\n                      <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={activeStep === 0}\r\n                          onClick={handleBack}\r\n                          className={classes.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                          // variant=\"contained\"\r\n                          // color=\"primary\"\r\n                          onClick={handleNext}\r\n                          className={classes.button}\r\n                      >\r\n                        {activeStep === steps.length ? 'Finish' : 'Next'}\r\n                      </Button>\r\n                      {/*{activeStep === steps.length && (*/}\r\n                          <Button aria-label=\"Add\" className={classes.button}>\r\n                            <AddIcon />\r\n                          </Button>\r\n                      {/*)}*/}\r\n\r\n                    </div>\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === steps.length + 1 && (\r\n            <Paper square elevation={0} className={classes.resetContainer}>\r\n              <Typography>All steps completed - you&apos;re finished</Typography>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleReset}\r\n                  className={classes.button}>\r\n                reset\r\n              </Button>\r\n              <Button\r\n\r\n                  onClick={handleClick}\r\n                  className={classes.button}>\r\n                Save\r\n              </Button>\r\n\r\n\r\n              <Snackbar\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}\r\n                  ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                  }}\r\n                  message={<span id=\"message-id\">Note archived</span>}\r\n                  action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                      UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={handleClose}\r\n                    >\r\n                      <CloseIcon />\r\n                    </IconButton>,\r\n                  ]}\r\n              />\r\n\r\n            </Paper>\r\n        )}\r\n      </div>\r\n  );\r\n}\r\n//\r\n//\r\n//\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n//\r\n// const useStyles = makeStyles(theme => ({\r\n//   close: {\r\n//     padding: theme.spacing(0.5),\r\n//   },\r\n// }));\r\n//\r\n// export default function SimpleSnackbar() {\r\n//   const classes = useStyles();\r\n//   const [open, setOpen] = React.useState(false);\r\n//\r\n//   function handleClick() {\r\n//     setOpen(true);\r\n//   }\r\n//\r\n//   function handleClose(event, reason) {\r\n//     if (reason === 'clickaway') {\r\n//       return;\r\n//     }\r\n//\r\n//     setOpen(false);\r\n//   }\r\n//\r\n//   return (\r\n//       <div>\r\n//         <Button onClick={handleClick}>Open simple snackbar</Button>\r\n//         <Snackbar\r\n//             anchorOrigin={{\r\n//               vertical: 'bottom',\r\n//               horizontal: 'left',\r\n//             }}\r\n//             open={open}\r\n//             autoHideDuration={6000}\r\n//             onClose={handleClose}\r\n//             ContentProps={{\r\n//               'aria-describedby': 'message-id',\r\n//             }}\r\n//             message={<span id=\"message-id\">Note archived</span>}\r\n//             action={[\r\n//               <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n//                 UNDO\r\n//               </Button>,\r\n//               <IconButton\r\n//                   key=\"close\"\r\n//                   aria-label=\"Close\"\r\n//                   color=\"inherit\"\r\n//                   className={classes.close}\r\n//                   onClick={handleClose}\r\n//               >\r\n//                 <CloseIcon />\r\n//               </IconButton>,\r\n//             ]}\r\n//         />\r\n//       </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}