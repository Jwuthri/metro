{"ast":null,"code":"import _slicedToArray from \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/pages/MyPage.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent'; // import Button from '@material-ui/core/Button';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from \"react-bootstrap\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { amber, green } from '@material-ui/core/colors';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { Form, InputGroup, Col, Row } from \"react-bootstrap\";\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: CheckCircleIcon\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2)\n    },\n    resetContainer: {\n      padding: theme.spacing(3)\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Create an ad', 'Create an ad', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicChecbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Check me out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \"Submit\"));\n\n    case 1:\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\n\n    case 2:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    case 2:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    case 3:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    case 4:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    case 5:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    case 6:\n      return \"Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.\";\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nfunction MySnackbarContentWrapper(props) {\n  var classes = useStyles();\n\n  var className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = variantIcon[variant];\n  return /*#__PURE__*/React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), message),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }))]\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport function MyPage() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var steps = getSteps();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  }\n\n  function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"kj\"), /*#__PURE__*/React.createElement(StepContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicChecbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n  // color=\"primary\"\n  , {\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, \"Next\"))))), steps.map(function (label, index) {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, label), /*#__PURE__*/React.createElement(StepContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, getStepContent(index)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actionsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Button // variant=\"contained\"\n    // color=\"primary\"\n    , {\n      onClick: handleNext,\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, activeStep === steps.length ? 'Finish' : 'Next'), /*#__PURE__*/React.createElement(Button, {\n      \"aria-label\": \"Add\",\n      className: classes.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }))))));\n  })), activeStep === steps.length + 1 && /*#__PURE__*/React.createElement(Paper, {\n    square: true,\n    elevation: 0,\n    className: classes.resetContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    onClose: handleClose,\n    variant: \"info\",\n    message: \"Task has been saved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/pages/MyPage.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Paper","Typography","Button","Fab","AddIcon","Snackbar","IconButton","CloseIcon","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","amber","green","SnackbarContent","WarningIcon","Form","InputGroup","Col","Row","variantIcon","success","warning","error","info","useStyles","theme","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","message","display","alignItems","getSteps","getStepContent","step","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","MyPage","useState","activeStep","setActiveStep","steps","open","setOpen","handleClick","handleClose","event","reason","handleNext","prevActiveStep","handleBack","handleReset","root","map","label","index","length","vertical","horizontal"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\n// import Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport {Form, InputGroup, Col, Row} from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: CheckCircleIcon,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Create an ad', 'Create an ad', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return (\r\n\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicChecbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n\r\n      )\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    case 3:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    case 4:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    case 5:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    case 6:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n      <SnackbarContent\r\n          className={clsx(classes[variant], className)}\r\n          aria-describedby=\"client-snackbar\"\r\n          message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n              {message}\r\n        </span>\r\n          }\r\n          action={[\r\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n              <CloseIcon className={classes.icon} />\r\n            </IconButton>,\r\n          ]}\r\n          {...other}\r\n      />\r\n  );\r\n}\r\n\r\n\r\nexport function MyPage() {\r\n  const classes = useStyles();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          <Step key={0}>\r\n            <StepLabel>\r\nkj\r\n            </StepLabel>\r\n            <StepContent>\r\n              <Typography>\r\n\r\n                <Form>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicChecbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n\r\n\r\n\r\n              </Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                      // variant=\"contained\"\r\n                      // color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n\r\n          {steps.map((label, index) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n                <StepContent>\r\n                  <Typography>{getStepContent(index)}</Typography>\r\n                  <div className={classes.actionsContainer}>\r\n                    <div>\r\n                      <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={activeStep === 0}\r\n                          onClick={handleBack}\r\n                          className={classes.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                          // variant=\"contained\"\r\n                          // color=\"primary\"\r\n                          onClick={handleNext}\r\n                          className={classes.button}\r\n                      >\r\n                        {activeStep === steps.length ? 'Finish' : 'Next'}\r\n                      </Button>\r\n                      {/*{activeStep === steps.length && (*/}\r\n                          <Button aria-label=\"Add\" className={classes.button}>\r\n                            <AddIcon />\r\n                          </Button>\r\n                      {/*)}*/}\r\n\r\n                    </div>\r\n                  </div>\r\n                </StepContent>\r\n              </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === steps.length + 1 && (\r\n            <Paper square elevation={0} className={classes.resetContainer}>\r\n              <Typography>All steps completed - you&apos;re finished</Typography>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleReset}\r\n                  className={classes.button}>\r\n                reset\r\n              </Button>\r\n              <Button\r\n\r\n                  onClick={handleClick}\r\n                  className={classes.button}>\r\n                Save\r\n              </Button>\r\n\r\n              <Snackbar\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  open={open}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleClose}\r\n              >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant=\"info\"\r\n                    message=\"Task has been saved\"\r\n                />\r\n              </Snackbar>\r\n            </Paper>\r\n        )}\r\n      </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}