{"ast":null,"code":"import _objectSpread from \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js\";\nimport React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nvar prepareFilter = function prepareFilter(queryParams, values) {\n  var searchText = values.searchText;\n\n  var newQueryParams = _objectSpread({}, queryParams);\n\n  var filter = {};\n  filter.text = searchText;\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function RemarksFilter() {\n  // Remarks UI Context\n  var remarksUIContext = useRemarksUIContext();\n  var remarksUIProps = useMemo(function () {\n    return {\n      setQueryParams: remarksUIContext.setQueryParams,\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\n      queryParams: remarksUIContext.queryParams\n    };\n  }, [remarksUIContext]);\n\n  var applyFilter = function applyFilter(values) {\n    var newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\n\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      remarksUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-filtration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 text-right margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return remarksUIProps.openNewRemarkDialog();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Create new remark\")))));\n}","map":{"version":3,"sources":["/home/jwuthri/Documents/Github/Web/metronic_v7.1.9/theme/react/demo3/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js"],"names":["React","useMemo","Formik","isEqual","useRemarksUIContext","prepareFilter","queryParams","values","searchText","newQueryParams","filter","text","RemarksFilter","remarksUIContext","remarksUIProps","setQueryParams","openNewRemarkDialog","applyFilter","pageNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAcC,MAAd,EAAyB;AAAA,MACrCC,UADqC,GACtBD,MADsB,CACrCC,UADqC;;AAE7C,MAAMC,cAAc,qBAAQH,WAAR,CAApB;;AACA,MAAMI,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACC,IAAP,GAAcH,UAAd;AACAC,EAAAA,cAAc,CAACC,MAAf,GAAwBA,MAAxB;AACA,SAAOD,cAAP;AACD,CAPD;;AASA,OAAO,SAASG,aAAT,GAAyB;AAC9B;AACA,MAAMC,gBAAgB,GAAGT,mBAAmB,EAA5C;AACA,MAAMU,cAAc,GAAGb,OAAO,CAAC,YAAM;AACnC,WAAO;AACLc,MAAAA,cAAc,EAAEF,gBAAgB,CAACE,cAD5B;AAELC,MAAAA,mBAAmB,EAAEH,gBAAgB,CAACG,mBAFjC;AAGLV,MAAAA,WAAW,EAAEO,gBAAgB,CAACP;AAHzB,KAAP;AAKD,GAN6B,EAM3B,CAACO,gBAAD,CAN2B,CAA9B;;AAQA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACV,MAAD,EAAY;AAC9B,QAAME,cAAc,GAAGJ,aAAa,CAACS,cAAc,CAACR,WAAhB,EAA6BC,MAA7B,CAApC;;AACA,QAAI,CAACJ,OAAO,CAACM,cAAD,EAAiBK,cAAc,CAACR,WAAhC,CAAZ,EAA0D;AACxDG,MAAAA,cAAc,CAACS,UAAf,GAA4B,CAA5B;AACAJ,MAAAA,cAAc,CAACC,cAAf,CAA8BN,cAA9B;AACD;AACF,GAND;;AAQA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAuCE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,eAwCE;AAAK,IAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMK,cAAc,CAACE,mBAAf,EAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAxCF,CADF,CADF,CADF;AAwDD","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            {/*<Formik*/}\r\n            {/*  initialValues={{*/}\r\n            {/*    searchText: \"\",*/}\r\n            {/*  }}*/}\r\n            {/*  onSubmit={(values) => {*/}\r\n            {/*    applyFilter(values);*/}\r\n            {/*  }}*/}\r\n            {/*>*/}\r\n            {/*  {({*/}\r\n            {/*    values,*/}\r\n            {/*    handleSubmit,*/}\r\n            {/*    handleBlur,*/}\r\n            {/*    handleChange,*/}\r\n            {/*    setFieldValue,*/}\r\n            {/*  }) => (*/}\r\n            {/*    <form onSubmit={handleSubmit}>*/}\r\n            {/*      <div>*/}\r\n            {/*        <input*/}\r\n            {/*          type=\"text\"*/}\r\n            {/*          className=\"form-control\"*/}\r\n            {/*          name=\"searchText\"*/}\r\n            {/*          placeholder=\"Search\"*/}\r\n            {/*          onBlur={handleBlur}*/}\r\n            {/*          value={values.searchText}*/}\r\n            {/*          onChange={(e) => {*/}\r\n            {/*            setFieldValue(\"searchText\", e.target.value);*/}\r\n            {/*            handleSubmit();*/}\r\n            {/*          }}*/}\r\n            {/*        />*/}\r\n            {/*        <small className=\"form-text text-muted\">*/}\r\n            {/*          <b>Search</b> in all fields*/}\r\n            {/*        </small>*/}\r\n            {/*      </div>*/}\r\n            {/*    </form>*/}\r\n            {/*  )}*/}\r\n            {/*</Formik>*/}\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}